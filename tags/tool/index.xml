<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tool on NereusYi</title><link>https://g.nereusyi.com/tags/tool/</link><description>Recent content in tool on NereusYi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Mar 2020 18:50:06 +0800</lastBuildDate><atom:link href="https://g.nereusyi.com/tags/tool/index.xml" rel="self" type="application/rss+xml"/><item><title>个人常用IntelliJ IDEA插件</title><link>https://g.nereusyi.com/post/2020/03/java-intellij-idea-plugin/</link><pubDate>Sat, 21 Mar 2020 18:50:06 +0800</pubDate><guid>https://g.nereusyi.com/post/2020/03/java-intellij-idea-plugin/</guid><description>由于常用Windows，所以快捷键的说明都是基于Windows。
Maven Helper 基于Maven的Java开发必备，能列出依赖冲突项、列出全部依赖和按树状列出依赖。 插件地址：https://plugins.jetbrains.com/plugin/7179-maven-helper
Request mapper Spring MVC / Spring Boot开发必备，能根据RequestMapping的URL来搜索对应的方法。默认快捷键:可以直接双击Shift搜索，也可以用&amp;quot; Ctrl + Shift + \ &amp;ldquo;。 插件地址：https://plugins.jetbrains.com/plugin/9567-request-mapper
String Manipulation 常见字符串格式的相互转换，对字符串的操作。对我个人来说，对接口文档的时候会很方便，从文档上复制下来的变量名格式，可以批量转换成Java的驼峰格式，或者数据库的下划线格式。默认快捷键是：&amp;ldquo;alt + M&amp;rdquo; 和 &amp;ldquo;alt + shift + M&amp;rdquo;
插件地址：https://plugins.jetbrains.com/plugin/2162-string-manipulation
Grazie 语法检查插件，能避免常见的语法错误。 插件地址：https://plugins.jetbrains.com/plugin/12175-grazie
Free MyBatis plugin Mybatis开发插件，可以从代码调用的地方，直接跳转到XML文件对应方法。 插件地址：https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin
Rainbow Brackets 为括号使用不同的颜色区分，写代码的时候能更直观的区分括号对。 插件地址：https://plugins.jetbrains.com/plugin/10080-rainbow-brackets
Nyan Progress Bar 这是个挺有意思的进度条美化插件。 插件地址：https://plugins.jetbrains.com/plugin/8575-nyan-progress-bar</description></item><item><title>Postman添加公共HTTP头</title><link>https://g.nereusyi.com/post/2019/postman-add-common-header/</link><pubDate>Sun, 08 Sep 2019 18:28:09 +0800</pubDate><guid>https://g.nereusyi.com/post/2019/postman-add-common-header/</guid><description>postman添加公共HTTP头的方法如下：
1、在Collections下的文件夹右键，点击编辑
2、在Pre-request Scripts选项卡下，添加JS代码：
添加之后，对整个文件夹下的请求都有效
pm.request.headers.add({key: &amp;#39;header_name&amp;#39;, value: &amp;#39;header_value&amp;#39; }) pm.request.headers.upsert({key: &amp;#39;header_name&amp;#39;, value: &amp;#39;header_value&amp;#39; }) pm.request.headers.remove(&amp;#39;header_name&amp;#39;) 注意：如果需要看实际发送的请求参数，可以点工具栏的view-&amp;gt;Show Postman Console</description></item></channel></rss>